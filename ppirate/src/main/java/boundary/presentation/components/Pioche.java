/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package boundary.presentation.components;

import boundary.AdaptateurDuNoyauFonctionnel;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;

/**
 *
 * @author wer
 */
public class Pioche extends javax.swing.JPanel {
    private AdaptateurDuNoyauFonctionnel noyau;

    /**
     * Creates new form PanelPioche
     */
    public Pioche() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setMaximumSize(new java.awt.Dimension(300, 300));
        setMinimumSize(new java.awt.Dimension(300, 300));
        setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    @Override
    protected void paintComponent(Graphics g) {
        super.repaint();
        Graphics2D g2d = (Graphics2D)g;
        
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        
        int x = 0;
        int y = 0;
        int width = 100;
        int height = 100;
        int arc = 30;
        
        if (noyau.getControlJeu().isPiocheEmpty()) {
            // faire la pioche vide
            g2d.setColor(new Color(200, 200, 200)); // gris clair
            g2d.fillRoundRect(x, y, width, height, arc, arc);
            g2d.setColor(Color.DARK_GRAY);
            g2d.setStroke(new BasicStroke(3));
            g2d.drawRoundRect(x, y, width, height, arc, arc);

            g2d.setFont(new Font("Serif", Font.BOLD, 24));
            g2d.drawString("Vide", x + 45, y + height / 2);
        }
        else {
            // afficher le dos d'une carte
            GradientPaint gradient = new GradientPaint(x, y, new Color(150, 0, 0), x + width, y + height, new Color(255, 50, 50));
            g2d.setPaint(gradient);
            g2d.fillRoundRect(x, y, width, height, arc, arc);

            g2d.setColor(Color.WHITE);
            g2d.setStroke(new BasicStroke(3));
            g2d.drawRoundRect(x, y, width, height, arc, arc);
            
            g2d.setColor(Color.black);
            g2d.setFont(new Font("Serif", Font.BOLD, 24));
            g2d.drawString("Pioche", x + 10, y + height / 2);
        }
    }
    
    public void setAdaptateur(AdaptateurDuNoyauFonctionnel noyau) {
        this.noyau = noyau;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
