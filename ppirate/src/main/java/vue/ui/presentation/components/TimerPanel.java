/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vue.ui.presentation.components;

import java.awt.AlphaComposite;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.geom.AffineTransform;
import java.awt.geom.RoundRectangle2D;
import javax.swing.event.EventListenerList;
import vue.ui.dialog.MainDialog;
import vue.ui.presentation.TimeOutEvent;
import vue.ui.presentation.TimeOutListener;

/**
 *
 * @author David Marquet
 */
public class TimerPanel extends javax.swing.JPanel {
    private MainDialog dialog;

    /**
     * Creates new form TimerPanel
     */
    javax.swing.Timer timer;
    private int decompte;
    private int duree;
    private static final int TEMPS = 10;
    private float opacite;
    private static final int BORDURE = 15;
    
    public TimerPanel() {
        this.opacite = 0.5f;
        initComponents();
        this.timer = new javax.swing.Timer(1000, (e) -> { timerEventHandler(e); });
        this.decompte = TEMPS;
        this.duree = TEMPS;
        listenerList = new EventListenerList();
    }
    
    public void setDialog(MainDialog dialog){
        this.dialog = dialog;
    }
    
    public void stop() {
        timer.stop();
    }
    
    public void start() {
        timer.start();
    }
    
    public void addTimeModelListener(TimeOutListener listener) {
        listenerList.add(TimeOutListener.class, listener);
    }

    public void removeTimeModelListener(TimeOutListener listener) {
        listenerList.remove(TimeOutListener.class, listener);
    }
    
    @Override
    protected void paintComponent(Graphics g){
        super.paintComponent(g);
        
        // fond global du composant
        Graphics2D g2d = (Graphics2D) g.create();
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,this.opacite)); // baisse l'opacité du panel
        
        g2d.setColor(Color.BLACK);
        g2d.fill(new RoundRectangle2D.Float(0,0,getWidth(),getHeight(),BORDURE,BORDURE));
        
        // fond rond timer
        int padding = 100;
        int diametre = Math.min(getWidth(), getHeight()-padding);
        int x = (getWidth() - diametre)/2;
        int y = (getHeight() - diametre)/2;
        g2d.setColor(Color.GRAY);
        g2d.fillOval(x, y, diametre, diametre);
        
        //temps qui défile
        g2d.setColor(Color.RED);
        int arcAngle =  (360/this.duree) * (this.duree - this.decompte);
        g2d.fillArc(x,y,diametre, diametre, 90, arcAngle);
        
        g2d.dispose();
    }
    
    private void timerEventHandler(java.awt.event.ActionEvent e) {
        this.decompte --;
        if (this.decompte == 1) {
            TimeOutEvent event = new TimeOutEvent(this); // si le décompte est fini on prévient la carte
            for (TimeOutListener listener : listenerList.getListeners(TimeOutListener.class)) {
                listener.timeOut(event);
            }
        }
        if (this.decompte < 0){
            TimeOutEvent event = new TimeOutEvent(this); // si le décompte est fini on prévient la carte
            for (TimeOutListener listener : listenerList.getListeners(TimeOutListener.class)) {
                listener.timeOut(event);
            }
            timerTxt.setText("Fin du tour");
            timer.stop();
            dialog.handleChangerJoueur();
            System.out.println("On change de joueur car le temps est écoulé.");
            dialog.updatePlateau();
            restartTimer();
        }
        else{
           timerTxt.setText(String.valueOf(this.decompte));
        }
        repaint();
    }
    
    public void restartTimer() {
        if (timer.isRunning()){
            timer.stop();
        }
        this.decompte = TEMPS;
        timer.start();
        repaint();
    }
    
    public void updateTimer(int timeLeft) {
        this.decompte = timeLeft;
        repaint();
    }
    
    public int getDecompte() {
        return decompte;
    }
    
    public javax.swing.Timer getTimer() {
        return timer;
    }
    
    public void setTour(String nomJoueur){
        tourLabel.setText("Tour de "+ nomJoueur);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nomTimer = new javax.swing.JLabel();
        timerTxt = new javax.swing.JLabel();
        tourLabel = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(100, 200));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(100, 200));
        setLayout(new java.awt.GridLayout(3, 0));

        nomTimer.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nomTimer.setForeground(new java.awt.Color(255, 255, 255));
        nomTimer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nomTimer.setText("TEMPS DU TOUR");
        add(nomTimer);

        timerTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        timerTxt.setForeground(new java.awt.Color(255, 255, 255));
        timerTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timerTxt.setText(String.valueOf(TEMPS));
        add(timerTxt);

        tourLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tourLabel.setForeground(new java.awt.Color(255, 255, 255));
        tourLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tourLabel.setText("Tour de Joueur");
        add(tourLabel);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel nomTimer;
    private javax.swing.JLabel timerTxt;
    private javax.swing.JLabel tourLabel;
    // End of variables declaration//GEN-END:variables
}
